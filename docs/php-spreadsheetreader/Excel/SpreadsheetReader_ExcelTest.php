<?php
// Call SpreadsheetReader_ExcelTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "SpreadsheetReader_ExcelTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(__FILE__) . '/SpreadsheetReader_Excel.php';

/**
 * Test class for SpreadsheetReader_Excel.
 * Generated by PHPUnit_Util_Skeleton on 2007-01-26 at 08:50:15.
 */
class SpreadsheetReader_ExcelTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("SpreadsheetReader_ExcelTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    public $xlsReader;
    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
        $this->xlsReader = new SpreadsheetReader_Excel;
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * case: 檔案不存在。
     * result: FALSE
     *
     * @test
     */
    public function ExcelFileIsNotExisted() {
        $xlsFilePath = '';
        $sheets = $this->xlsReader->read($xlsFilePath);
        $this->assertFalse($sheets);
    }

    /**
     * case: Not an excel file
     * result: FALSE
     *
     * @test
     */
    public function FileIsNotAnExcelFile() {
        $xlsFilePath = __FILE__;
        $sheets = $this->xlsReader->read($xlsFilePath);
        $this->assertFalse($sheets);
    }

    /**
     * case: 讀取 test.xls
     * result:
     *  2 sheets.
     *  5 rows of first sheet.
     *  3 columns of first row of first sheet.
     *  Value of B:5 of first sheet is '許功蓋'.
     *
     * @test
     */
    public function ReadFromExcelFile() {
        $xlsFilePath = 'test2.xls';
        $sheets = $this->xlsReader->read($xlsFilePath);
        
        $this->assertEquals(2, count($sheets));
        $this->assertEquals(5, count($sheets[0]));
        $this->assertEquals(3, count($sheets[0][0]));
        $this->assertEquals('Kaohsiung', $sheets[0][1][2]);
        $this->assertEquals('許功蓋', $sheets[0][4][1]);
        $this->assertEquals('nothing', $sheets[1][1][0]);
    }

    /**
     * case: 讀取 test.xls AS XMLString.
     * result:
     *  A XML String.
     *
     * @test
     */
    public function ReadExcelFileToXmlString() {
        $xlsFilePath = 'test2.xls';
        $xmlString = $this->xlsReader->read($xlsFilePath, SpreadsheetReader_Excel::READ_XMLSTRING);
        $this->assertTrue(strpos($xmlString, '<?xml ') == 0);
    }

    /**
     * case: 讀取 test.xls AS hash.
     * result:
     *  A hash.
     *
     * @test
     */
    public function ReadExcelFileAsHash() {
        $xlsFilePath = 'test2.xls';
        $sheets = $this->xlsReader->read($xlsFilePath, SpreadsheetReader_Excel::READ_ASSOC);
        $this->assertEquals(2, count($sheets));
        $this->assertEquals(4, count($sheets[0]));
        $this->assertEquals(3, count($sheets[0][0]));
        $this->assertNull($sheets[0][0]['name']);
        $this->assertEquals('Kaohsiung', $sheets[0][0]['address']);
        $this->assertEquals('許功蓋', $sheets[0][3]['name']);
        $this->assertEquals('nothing', $sheets[1][0]['CID']);
        $this->assertNull($sheets[1][0]['ID']);
    }
}

// Call SpreadsheetReader_ExcelTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "SpreadsheetReader_ExcelTest::main") {
    SpreadsheetReader_ExcelTest::main();
}
?>
